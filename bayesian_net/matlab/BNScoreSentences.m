function [sentences, normlogprobs] = BNScoreSentences(netobj, sentenceFilename, N)
% BNScoreSentences scores sentences according to word probabilities
%
% Inputs:
% netobj: object generated by createBN
% sentenceFilename: file with sentences (one per line)
% N: number of sentences (default: run getNumLines)
%
% Outputs:
% sentences: cell array of sentences
% normlogprobs: log prob normalized to the lenght of the sentence
%
% (C) 2017, Giampiero Salvi <giampi@kth.se>

if nargin<3
    N=getNumLines(sentenceFilename);
end

% open file
fid = fopen(sentenceFilename);

% get list of words in correct order
words = netobj.nodeNames(netobj.WORDNODES);
% ...and corresponding probabilities
wordLogProbs = log(BNGetWordProbs(netobj));

% convert sentences to vectors of word indices
sentences = cell(1,N);
sentenceLogProbs = ones(1,N);

% read the sentences
sentenceidx = 1;
while(1)
    line=fgetl(fid);
    if ~ischar(line), break, end
    sentences{sentenceidx} = line;
    sentWords = regexp(line, '[^\s]*', 'match');
    sentLen = length(sentWords);
    %ldata = zeros(1, length(lcont));
    for h=1:sentLen
        idx = find(strcmpi(sentWords(h), words));
        if isempty(idx)
            error('out of vocabulary word: %s\n', sentWords{h});
        end
        sentenceLogProbs(sentenceidx) = sentenceLogProbs(sentenceidx) + wordLogProbs(idx);
    end
    sentenceLogProbs(sentenceidx) = sentenceLogProbs(sentenceidx)/sentLen;
    sentenceidx = sentenceidx+1;
end

normlogprobs = sentenceLogProbs;
